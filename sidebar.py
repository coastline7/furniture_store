"""
–ï–¥–∏–Ω—ã–π —Å–∞–π–¥–±–∞—Ä: –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø–æ–∏—Å–∫, –º–µ–Ω—é
–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å ¬´–í–µ—Ä—Å–∏—è –¥–ª—è —Å–ª–∞–±–æ–≤–∏–¥—è—â–∏—Ö¬ª.
–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞/–≤—ã—Ö–æ–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ JS.
–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Python ‚â•3.7 –∏ Streamlit –±–µ–∑ experimental_rerun.
"""

import streamlit as st
import auth
import search
import config
from pathlib import Path
from typing import Optional

# ------- –º–∞—Ä—à—Ä—É—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü -------
MENU = {
    "üè† –ì–ª–∞–≤–Ω–∞—è":       "main.py",
    "üì∞ –õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π": "pages/news.py",
    "üìö –ö–∞—Ç–µ–≥–æ—Ä–∏–∏":     "pages/category_page.py",
    "üí¨ –°–æ–æ–±—â–µ–Ω–∏—è":     "pages/messages_board.py",
    "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":      "pages/contact.py",
    "üó∫Ô∏è –ö–∞—Ä—Ç–∞ —Å–∞–π—Ç–∞":   "pages/sitemap_page.py",
}

# ------------------------------------------------------------------ AUTH ---
def _login_block() -> None:
    st.sidebar.subheader("–í—Ö–æ–¥")
    uname = st.sidebar.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", key="login_user")
    pwd   = st.sidebar.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="login_pwd")
    if st.sidebar.button("–í–æ–π—Ç–∏"):
        ok, role = auth.authenticate(uname, pwd)
        if ok:
            st.session_state["user"] = uname
            st.session_state["role"] = role
            st.sidebar.success("–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            st.sidebar.markdown(
                "<script>window.location.reload()</script>",
                unsafe_allow_html=True,
            )
        else:
            st.sidebar.error("–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")

def _signup_block() -> None:
    st.sidebar.subheader("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    uname = st.sidebar.text_input("–ù–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", key="reg_user")
    pwd1  = st.sidebar.text_input("–ü–∞—Ä–æ–ª—å", type="password", key="reg_pwd1")
    pwd2  = st.sidebar.text_input("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å", type="password", key="reg_pwd2")
    if st.sidebar.button("–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç"):
        if pwd1 != pwd2 or not pwd1:
            st.sidebar.error("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –∏–ª–∏ –ø—É—Å—Ç—ã–µ")
        else:
            ok, msg = auth.create_user(uname, pwd1)
            if ok:
                st.sidebar.success(msg)
                st.sidebar.markdown(
                    "<script>window.location.reload()</script>",
                    unsafe_allow_html=True,
                )
            else:
                st.sidebar.error(msg)

def _auth_section() -> None:
    if st.session_state.get("user"):
        st.sidebar.success(
            f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ **{st.session_state['user']}** "
            f"({st.session_state['role']})"
        )
        if st.sidebar.button("–í—ã–π—Ç–∏"):
            st.session_state["user"] = None
            st.session_state["role"] = None
            st.sidebar.success("–í—ã –≤—ã—à–ª–∏")
            st.sidebar.markdown(
                "<script>window.location.reload()</script>",
                unsafe_allow_html=True,
            )
    else:
        tab = st.sidebar.radio("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", ["–í–æ–π—Ç–∏", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"])
        if tab == "–í–æ–π—Ç–∏":
            _login_block()
        else:
            _signup_block()

# ------------------------------------------------------------- RENDER ---
def render(active_path: Optional[str]) -> str:
    """
    –†–∏—Å—É–µ–º —Å–∞–π–¥–±–∞—Ä –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Ç—å *.py –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    active_path ‚Äî —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä 'pages/news.py') –∏–ª–∏ None.
    """
    if "user" not in st.session_state:
        st.session_state["user"] = None
    if "role" not in st.session_state:
        st.session_state["role"] = None
    if "a11y" not in st.session_state:
        st.session_state["a11y"] = False

    _auth_section()
    st.sidebar.markdown("---")

    # ------- –ø–æ–∏—Å–∫ -------
    query = st.sidebar.text_input("üîç –ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—å—è–º")
    if query:
        results = search.search(query)
        st.sidebar.markdown(f"**–ù–∞–π–¥–µ–Ω–æ: {len(results)}**")
        for art in results[:10]:
            st.sidebar.markdown(f"- {art['title']}")
    st.sidebar.markdown("---")

    # ------- –º–µ–Ω—é -------
    menu_keys = list(MENU.keys())
    default_idx = 0
    if active_path and active_path in MENU.values():
        default_idx = list(MENU.values()).index(active_path)
    selection = st.sidebar.radio("–ú–µ–Ω—é", menu_keys, index=default_idx)
    selected_path = MENU[selection]

    # ------- –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–ª–∞–±–æ–≤–∏–¥—è—â–∏—Ö -------
    st.sidebar.markdown("---")
    st.session_state["a11y"] = st.sidebar.checkbox(
        "–í–µ—Ä—Å–∏—è –¥–ª—è —Å–ª–∞–±–æ–≤–∏–¥—è—â–∏—Ö",
        value=st.session_state["a11y"],
    )
    if st.session_state["a11y"]:
        st.markdown(config.ACCESSIBLE_CSS, unsafe_allow_html=True)

    return selected_path
